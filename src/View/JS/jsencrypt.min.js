var JSEncryptExports = {};
(function (T) {
    function e(a, b, c) {
        null != a && ("number" == typeof a ? this.fromNumber(a, b, c) : null == b && "string" != typeof a ? this.fromString(a, 256) : this.fromString(a, b))
    }

    function l() {
        return new e(null)
    }

    function U(a, b, c, d, f, e) {
        for (; 0 <= --e;) {
            var g = b * this[a++] + c[d] + f;
            f = Math.floor(g / 67108864);
            c[d++] = g & 67108863
        }
        return f
    }

    function V(a, b, c, d, f, e) {
        var g = b & 32767;
        for (b >>= 15; 0 <= --e;) {
            var h = this[a] & 32767, l = this[a++] >> 15, k = b * h + l * g, h = g * h + ((k & 32767) << 15) + c[d] + (f & 1073741823);
            f = (h >>> 30) + (k >>> 15) + b * l + (f >>> 30);
            c[d++] = h & 1073741823
        }
        return f
    }

    function W(a, b, c, d, f, e) {
        var g = b & 16383;
        for (b >>= 14; 0 <= --e;) {
            var h = this[a] & 16383, l = this[a++] >> 14, k = b * h + l * g, h = g * h + ((k & 16383) << 14) + c[d] + f;
            f = (h >> 28) + (k >> 14) + b * l;
            c[d++] = h & 268435455
        }
        return f
    }

    function N(a, b) {
        var c = F[a.charCodeAt(b)];
        return null == c ? -1 : c
    }

    function w(a) {
        var b = l();
        b.fromInt(a);
        return b
    }

    function G(a) {
        var b = 1, c;
        if (0 != (c = a >>> 16))a = c, b += 16;
        if (0 != (c = a >> 8))a = c, b += 8;
        if (0 != (c = a >> 4))a = c, b += 4;
        if (0 != (c = a >> 2))a = c, b += 2;
        0 != a >> 1 && (b += 1);
        return b
    }

    function y(a) {
        this.m = a
    }

    function z(a) {
        this.m = a;
        this.mp = a.invDigit();
        this.mpl = this.mp & 32767;
        this.mph = this.mp >> 15;
        this.um = (1 << a.DB - 15) - 1;
        this.mt2 = 2 * a.t
    }

    function X(a, b) {
        return a & b
    }

    function I(a, b) {
        return a | b
    }

    function O(a, b) {
        return a ^ b
    }

    function P(a, b) {
        return a & ~b
    }

    function E() {
    }

    function Q(a) {
        return a
    }

    function B(a) {
        this.r2 = l();
        this.q3 = l();
        e.ONE.dlShiftTo(2 * a.t, this.r2);
        this.mu = this.r2.divide(a);
        this.m = a
    }

    function J() {
        this.j = this.i = 0;
        this.S = []
    }

    function R(a) {
        s[m++] ^= a & 255;
        s[m++] ^= a >> 8 & 255;
        s[m++] ^= a >> 16 & 255;
        s[m++] ^= a >> 24 & 255;
        m >= K && (m -= K)
    }

    function L() {
    }

    function t(a, b) {
        return new e(a,
            b)
    }

    function p() {
        this.n = null;
        this.e = 0;
        this.coeff = this.dmq1 = this.dmp1 = this.q = this.p = this.d = null
    }

    function M(a) {
        var b, c, d = "";
        for (b = 0; b + 3 <= a.length; b += 3)c = parseInt(a.substring(b, b + 3), 16), d += C.charAt(c >> 6) + C.charAt(c & 63);
        b + 1 == a.length ? (c = parseInt(a.substring(b, b + 1), 16), d += C.charAt(c << 2)) : b + 2 == a.length && (c = parseInt(a.substring(b, b + 2), 16), d += C.charAt(c >> 2) + C.charAt((c & 3) << 4));
        for (; 0 < (d.length & 3);)d += S;
        return d
    }

    function Y(a) {
        var b = "", c, d = 0, f;
        for (c = 0; c < a.length && a.charAt(c) != S; ++c)v = C.indexOf(a.charAt(c)),
        0 > v || (0 == d ? (b += u.charAt(v >> 2), f = v & 3, d = 1) : 1 == d ? (b += u.charAt(f << 2 | v >> 4), f = v & 15, d = 2) : 2 == d ? (b += u.charAt(f), b += u.charAt(v >> 2), f = v & 3, d = 3) : (b += u.charAt(f << 2 | v >> 4), b += u.charAt(v & 15), d = 0));
        1 == d && (b += u.charAt(f << 2));
        return b
    }

    var k;
    "Microsoft Internet Explorer" == navigator.appName ? (e.prototype.am = V, k = 30) : "Netscape" != navigator.appName ? (e.prototype.am = U, k = 26) : (e.prototype.am = W, k = 28);
    e.prototype.DB = k;
    e.prototype.DM = (1 << k) - 1;
    e.prototype.DV = 1 << k;
    e.prototype.FV = Math.pow(2, 52);
    e.prototype.F1 = 52 - k;
    e.prototype.F2 = 2 * k -
        52;
    var u = "0123456789abcdefghijklmnopqrstuvwxyz", F = [], n;
    k = 48;
    for (n = 0; 9 >= n; ++n)F[k++] = n;
    k = 97;
    for (n = 10; 36 > n; ++n)F[k++] = n;
    k = 65;
    for (n = 10; 36 > n; ++n)F[k++] = n;
    y.prototype.convert = function (a) {
        return 0 > a.s || 0 <= a.compareTo(this.m) ? a.mod(this.m) : a
    };
    y.prototype.revert = function (a) {
        return a
    };
    y.prototype.reduce = function (a) {
        a.divRemTo(this.m, null, a)
    };
    y.prototype.mulTo = function (a, b, c) {
        a.multiplyTo(b, c);
        this.reduce(c)
    };
    y.prototype.sqrTo = function (a, b) {
        a.squareTo(b);
        this.reduce(b)
    };
    z.prototype.convert = function (a) {
        var b =
            l();
        a.abs().dlShiftTo(this.m.t, b);
        b.divRemTo(this.m, null, b);
        0 > a.s && 0 < b.compareTo(e.ZERO) && this.m.subTo(b, b);
        return b
    };
    z.prototype.revert = function (a) {
        var b = l();
        a.copyTo(b);
        this.reduce(b);
        return b
    };
    z.prototype.reduce = function (a) {
        for (; a.t <= this.mt2;)a[a.t++] = 0;
        for (var b = 0; b < this.m.t; ++b) {
            var c = a[b] & 32767, d = c * this.mpl + ((c * this.mph + (a[b] >> 15) * this.mpl & this.um) << 15) & a.DM, c = b + this.m.t;
            for (a[c] += this.m.am(0, d, a, b, 0, this.m.t); a[c] >= a.DV;)a[c] -= a.DV, a[++c]++
        }
        a.clamp();
        a.drShiftTo(this.m.t, a);
        0 <= a.compareTo(this.m) &&
        a.subTo(this.m, a)
    };
    z.prototype.mulTo = function (a, b, c) {
        a.multiplyTo(b, c);
        this.reduce(c)
    };
    z.prototype.sqrTo = function (a, b) {
        a.squareTo(b);
        this.reduce(b)
    };
    e.prototype.copyTo = function (a) {
        for (var b = this.t - 1; 0 <= b; --b)a[b] = this[b];
        a.t = this.t;
        a.s = this.s
    };
    e.prototype.fromInt = function (a) {
        this.t = 1;
        this.s = 0 > a ? -1 : 0;
        0 < a ? this[0] = a : -1 > a ? this[0] = a + DV : this.t = 0
    };
    e.prototype.fromString = function (a, b) {
        var c;
        if (16 == b)c = 4; else if (8 == b)c = 3; else if (256 == b)c = 8; else if (2 == b)c = 1; else if (32 == b)c = 5; else if (4 == b)c = 2; else {
            this.fromRadix(a,
                b);
            return
        }
        this.s = this.t = 0;
        for (var d = a.length, f = !1, j = 0; 0 <= --d;) {
            var g = 8 == c ? a[d] & 255 : N(a, d);
            0 > g ? "-" == a.charAt(d) && (f = !0) : (f = !1, 0 == j ? this[this.t++] = g : j + c > this.DB ? (this[this.t - 1] |= (g & (1 << this.DB - j) - 1) << j, this[this.t++] = g >> this.DB - j) : this[this.t - 1] |= g << j, j += c, j >= this.DB && (j -= this.DB))
        }
        8 == c && 0 != (a[0] & 128) && (this.s = -1, 0 < j && (this[this.t - 1] |= (1 << this.DB - j) - 1 << j));
        this.clamp();
        f && e.ZERO.subTo(this, this)
    };
    e.prototype.clamp = function () {
        for (var a = this.s & this.DM; 0 < this.t && this[this.t - 1] == a;)--this.t
    };
    e.prototype.dlShiftTo =
        function (a, b) {
            var c;
            for (c = this.t - 1; 0 <= c; --c)b[c + a] = this[c];
            for (c = a - 1; 0 <= c; --c)b[c] = 0;
            b.t = this.t + a;
            b.s = this.s
        };
    e.prototype.drShiftTo = function (a, b) {
        for (var c = a; c < this.t; ++c)b[c - a] = this[c];
        b.t = Math.max(this.t - a, 0);
        b.s = this.s
    };
    e.prototype.lShiftTo = function (a, b) {
        var c = a % this.DB, d = this.DB - c, f = (1 << d) - 1, e = Math.floor(a / this.DB), g = this.s << c & this.DM, h;
        for (h = this.t - 1; 0 <= h; --h)b[h + e + 1] = this[h] >> d | g, g = (this[h] & f) << c;
        for (h = e - 1; 0 <= h; --h)b[h] = 0;
        b[e] = g;
        b.t = this.t + e + 1;
        b.s = this.s;
        b.clamp()
    };
    e.prototype.rShiftTo = function (a,
                                     b) {
        b.s = this.s;
        var c = Math.floor(a / this.DB);
        if (c >= this.t)b.t = 0; else {
            var d = a % this.DB, f = this.DB - d, e = (1 << d) - 1;
            b[0] = this[c] >> d;
            for (var g = c + 1; g < this.t; ++g)b[g - c - 1] |= (this[g] & e) << f, b[g - c] = this[g] >> d;
            0 < d && (b[this.t - c - 1] |= (this.s & e) << f);
            b.t = this.t - c;
            b.clamp()
        }
    };
    e.prototype.subTo = function (a, b) {
        for (var c = 0, d = 0, f = Math.min(a.t, this.t); c < f;)d += this[c] - a[c], b[c++] = d & this.DM, d >>= this.DB;
        if (a.t < this.t) {
            for (d -= a.s; c < this.t;)d += this[c], b[c++] = d & this.DM, d >>= this.DB;
            d += this.s
        } else {
            for (d += this.s; c < a.t;)d -= a[c], b[c++] = d &
                this.DM, d >>= this.DB;
            d -= a.s
        }
        b.s = 0 > d ? -1 : 0;
        -1 > d ? b[c++] = this.DV + d : 0 < d && (b[c++] = d);
        b.t = c;
        b.clamp()
    };
    e.prototype.multiplyTo = function (a, b) {
        var c = this.abs(), d = a.abs(), f = c.t;
        for (b.t = f + d.t; 0 <= --f;)b[f] = 0;
        for (f = 0; f < d.t; ++f)b[f + c.t] = c.am(0, d[f], b, f, 0, c.t);
        b.s = 0;
        b.clamp();
        this.s != a.s && e.ZERO.subTo(b, b)
    };
    e.prototype.squareTo = function (a) {
        for (var b = this.abs(), c = a.t = 2 * b.t; 0 <= --c;)a[c] = 0;
        for (c = 0; c < b.t - 1; ++c) {
            var d = b.am(c, b[c], a, 2 * c, 0, 1);
            if ((a[c + b.t] += b.am(c + 1, 2 * b[c], a, 2 * c + 1, d, b.t - c - 1)) >= b.DV)a[c + b.t] -= b.DV, a[c + b.t +
            1] = 1
        }
        0 < a.t && (a[a.t - 1] += b.am(c, b[c], a, 2 * c, 0, 1));
        a.s = 0;
        a.clamp()
    };
    e.prototype.divRemTo = function (a, b, c) {
        var d = a.abs();
        if (!(0 >= d.t)) {
            var f = this.abs();
            if (f.t < d.t)null != b && b.fromInt(0), null != c && this.copyTo(c); else {
                null == c && (c = l());
                var j = l(), g = this.s;
                a = a.s;
                var h = this.DB - G(d[d.t - 1]);
                0 < h ? (d.lShiftTo(h, j), f.lShiftTo(h, c)) : (d.copyTo(j), f.copyTo(c));
                d = j.t;
                f = j[d - 1];
                if (0 != f) {
                    var k = f * (1 << this.F1) + (1 < d ? j[d - 2] >> this.F2 : 0), p = this.FV / k, k = (1 << this.F1) / k, m = 1 << this.F2, A = c.t, n = A - d, r = null == b ? l() : b;
                    j.dlShiftTo(n, r);
                    0 <= c.compareTo(r) &&
                    (c[c.t++] = 1, c.subTo(r, c));
                    e.ONE.dlShiftTo(d, r);
                    for (r.subTo(j, j); j.t < d;)j[j.t++] = 0;
                    for (; 0 <= --n;) {
                        var q = c[--A] == f ? this.DM : Math.floor(c[A] * p + (c[A - 1] + m) * k);
                        if ((c[A] += j.am(0, q, c, n, 0, d)) < q) {
                            j.dlShiftTo(n, r);
                            for (c.subTo(r, c); c[A] < --q;)c.subTo(r, c)
                        }
                    }
                    null != b && (c.drShiftTo(d, b), g != a && e.ZERO.subTo(b, b));
                    c.t = d;
                    c.clamp();
                    0 < h && c.rShiftTo(h, c);
                    0 > g && e.ZERO.subTo(c, c)
                }
            }
        }
    };
    e.prototype.invDigit = function () {
        if (1 > this.t)return 0;
        var a = this[0];
        if (0 == (a & 1))return 0;
        var b = a & 3, b = b * (2 - (a & 15) * b) & 15, b = b * (2 - (a & 255) * b) & 255, b = b *
            (2 - ((a & 65535) * b & 65535)) & 65535, b = b * (2 - a * b % this.DV) % this.DV;
        return 0 < b ? this.DV - b : -b
    };
    e.prototype.isEven = function () {
        return 0 == (0 < this.t ? this[0] & 1 : this.s)
    };
    e.prototype.exp = function (a, b) {
        if (4294967295 < a || 1 > a)return e.ONE;
        var c = l(), d = l(), f = b.convert(this), j = G(a) - 1;
        for (f.copyTo(c); 0 <= --j;)if (b.sqrTo(c, d), 0 < (a & 1 << j))b.mulTo(d, f, c); else var g = c, c = d, d = g;
        return b.revert(c)
    };
    e.prototype.toString = function (a) {
        if (0 > this.s)return "-" + this.negate().toString(a);
        if (16 == a)a = 4; else if (8 == a)a = 3; else if (2 == a)a = 1; else if (32 ==
            a)a = 5; else if (4 == a)a = 2; else return this.toRadix(a);
        var b = (1 << a) - 1, c, d = !1, f = "", e = this.t, g = this.DB - e * this.DB % a;
        if (0 < e--) {
            if (g < this.DB && 0 < (c = this[e] >> g))d = !0, f = u.charAt(c);
            for (; 0 <= e;)g < a ? (c = (this[e] & (1 << g) - 1) << a - g, c |= this[--e] >> (g += this.DB - a)) : (c = this[e] >> (g -= a) & b, 0 >= g && (g += this.DB, --e)), 0 < c && (d = !0), d && (f += u.charAt(c))
        }
        return d ? f : "0"
    };
    e.prototype.negate = function () {
        var a = l();
        e.ZERO.subTo(this, a);
        return a
    };
    e.prototype.abs = function () {
        return 0 > this.s ? this.negate() : this
    };
    e.prototype.compareTo = function (a) {
        var b =
            this.s - a.s;
        if (0 != b)return b;
        var c = this.t, b = c - a.t;
        if (0 != b)return 0 > this.s ? -b : b;
        for (; 0 <= --c;)if (0 != (b = this[c] - a[c]))return b;
        return 0
    };
    e.prototype.bitLength = function () {
        return 0 >= this.t ? 0 : this.DB * (this.t - 1) + G(this[this.t - 1] ^ this.s & this.DM)
    };
    e.prototype.mod = function (a) {
        var b = l();
        this.abs().divRemTo(a, null, b);
        0 > this.s && 0 < b.compareTo(e.ZERO) && a.subTo(b, b);
        return b
    };
    e.prototype.modPowInt = function (a, b) {
        var c;
        c = 256 > a || b.isEven() ? new y(b) : new z(b);
        return this.exp(a, c)
    };
    e.ZERO = w(0);
    e.ONE = w(1);
    E.prototype.convert =
        Q;
    E.prototype.revert = Q;
    E.prototype.mulTo = function (a, b, c) {
        a.multiplyTo(b, c)
    };
    E.prototype.sqrTo = function (a, b) {
        a.squareTo(b)
    };
    B.prototype.convert = function (a) {
        if (0 > a.s || a.t > 2 * this.m.t)return a.mod(this.m);
        if (0 > a.compareTo(this.m))return a;
        var b = l();
        a.copyTo(b);
        this.reduce(b);
        return b
    };
    B.prototype.revert = function (a) {
        return a
    };
    B.prototype.reduce = function (a) {
        a.drShiftTo(this.m.t - 1, this.r2);
        a.t > this.m.t + 1 && (a.t = this.m.t + 1, a.clamp());
        this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
        for (this.m.multiplyLowerTo(this.q3,
            this.m.t + 1, this.r2); 0 > a.compareTo(this.r2);)a.dAddOffset(1, this.m.t + 1);
        for (a.subTo(this.r2, a); 0 <= a.compareTo(this.m);)a.subTo(this.m, a)
    };
    B.prototype.mulTo = function (a, b, c) {
        a.multiplyTo(b, c);
        this.reduce(c)
    };
    B.prototype.sqrTo = function (a, b) {
        a.squareTo(b);
        this.reduce(b)
    };
    var q = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311,
        313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997], Z = 67108864 / q[q.length - 1];
    e.prototype.chunkSize = function (a) {
        return Math.floor(Math.LN2 *
            this.DB / Math.log(a))
    };
    e.prototype.toRadix = function (a) {
        null == a && (a = 10);
        if (0 == this.signum() || 2 > a || 36 < a)return "0";
        var b = this.chunkSize(a), b = Math.pow(a, b), c = w(b), d = l(), f = l(), e = "";
        for (this.divRemTo(c, d, f); 0 < d.signum();)e = (b + f.intValue()).toString(a).substr(1) + e, d.divRemTo(c, d, f);
        return f.intValue().toString(a) + e
    };
    e.prototype.fromRadix = function (a, b) {
        this.fromInt(0);
        null == b && (b = 10);
        for (var c = this.chunkSize(b), d = Math.pow(b, c), f = !1, j = 0, g = 0, h = 0; h < a.length; ++h) {
            var l = N(a, h);
            0 > l ? "-" == a.charAt(h) && 0 == this.signum() &&
            (f = !0) : (g = b * g + l, ++j >= c && (this.dMultiply(d), this.dAddOffset(g, 0), g = j = 0))
        }
        0 < j && (this.dMultiply(Math.pow(b, j)), this.dAddOffset(g, 0));
        f && e.ZERO.subTo(this, this)
    };
    e.prototype.fromNumber = function (a, b, c) {
        if ("number" == typeof b)if (2 > a)this.fromInt(1); else {
            this.fromNumber(a, c);
            this.testBit(a - 1) || this.bitwiseTo(e.ONE.shiftLeft(a - 1), I, this);
            for (this.isEven() && this.dAddOffset(1, 0); !this.isProbablePrime(b);)this.dAddOffset(2, 0), this.bitLength() > a && this.subTo(e.ONE.shiftLeft(a - 1), this)
        } else {
            c = [];
            var d = a & 7;
            c.length =
                (a >> 3) + 1;
            b.nextBytes(c);
            c[0] = 0 < d ? c[0] & (1 << d) - 1 : 0;
            this.fromString(c, 256)
        }
    };
    e.prototype.bitwiseTo = function (a, b, c) {
        var d, f, e = Math.min(a.t, this.t);
        for (d = 0; d < e; ++d)c[d] = b(this[d], a[d]);
        if (a.t < this.t) {
            f = a.s & this.DM;
            for (d = e; d < this.t; ++d)c[d] = b(this[d], f);
            c.t = this.t
        } else {
            f = this.s & this.DM;
            for (d = e; d < a.t; ++d)c[d] = b(f, a[d]);
            c.t = a.t
        }
        c.s = b(this.s, a.s);
        c.clamp()
    };
    e.prototype.changeBit = function (a, b) {
        var c = e.ONE.shiftLeft(a);
        this.bitwiseTo(c, b, c);
        return c
    };
    e.prototype.addTo = function (a, b) {
        for (var c = 0, d = 0, f = Math.min(a.t,
            this.t); c < f;)d += this[c] + a[c], b[c++] = d & this.DM, d >>= this.DB;
        if (a.t < this.t) {
            for (d += a.s; c < this.t;)d += this[c], b[c++] = d & this.DM, d >>= this.DB;
            d += this.s
        } else {
            for (d += this.s; c < a.t;)d += a[c], b[c++] = d & this.DM, d >>= this.DB;
            d += a.s
        }
        b.s = 0 > d ? -1 : 0;
        0 < d ? b[c++] = d : -1 > d && (b[c++] = this.DV + d);
        b.t = c;
        b.clamp()
    };
    e.prototype.dMultiply = function (a) {
        this[this.t] = this.am(0, a - 1, this, 0, 0, this.t);
        ++this.t;
        this.clamp()
    };
    e.prototype.dAddOffset = function (a, b) {
        if (0 != a) {
            for (; this.t <= b;)this[this.t++] = 0;
            for (this[b] += a; this[b] >= this.DV;)this[b] -=
                this.DV, ++b >= this.t && (this[this.t++] = 0), ++this[b]
        }
    };
    e.prototype.multiplyLowerTo = function (a, b, c) {
        var d = Math.min(this.t + a.t, b);
        c.s = 0;
        for (c.t = d; 0 < d;)c[--d] = 0;
        var f;
        for (f = c.t - this.t; d < f; ++d)c[d + this.t] = this.am(0, a[d], c, d, 0, this.t);
        for (f = Math.min(a.t, b); d < f; ++d)this.am(0, a[d], c, d, 0, b - d);
        c.clamp()
    };
    e.prototype.multiplyUpperTo = function (a, b, c) {
        --b;
        var d = c.t = this.t + a.t - b;
        for (c.s = 0; 0 <= --d;)c[d] = 0;
        for (d = Math.max(b - this.t, 0); d < a.t; ++d)c[this.t + d - b] = this.am(b - d, a[d], c, 0, 0, this.t + d - b);
        c.clamp();
        c.drShiftTo(1, c)
    };
    e.prototype.modInt = function (a) {
        if (0 >= a)return 0;
        var b = this.DV % a, c = 0 > this.s ? a - 1 : 0;
        if (0 < this.t)if (0 == b)c = this[0] % a; else for (var d = this.t - 1; 0 <= d; --d)c = (b * c + this[d]) % a;
        return c
    };
    e.prototype.millerRabin = function (a) {
        var b = this.subtract(e.ONE), c = b.getLowestSetBit();
        if (0 >= c)return !1;
        var d = b.shiftRight(c);
        a = a + 1 >> 1;
        a > q.length && (a = q.length);
        for (var f = l(), j = 0; j < a; ++j) {
            f.fromInt(q[Math.floor(Math.random() * q.length)]);
            var g = f.modPow(d, this);
            if (0 != g.compareTo(e.ONE) && 0 != g.compareTo(b)) {
                for (var h = 1; h++ < c && 0 != g.compareTo(b);)if (g =
                        g.modPowInt(2, this), 0 == g.compareTo(e.ONE))return !1;
                if (0 != g.compareTo(b))return !1
            }
        }
        return !0
    };
    e.prototype.clone = function () {
        var a = l();
        this.copyTo(a);
        return a
    };
    e.prototype.intValue = function () {
        if (0 > this.s) {
            if (1 == this.t)return this[0] - this.DV;
            if (0 == this.t)return -1
        } else {
            if (1 == this.t)return this[0];
            if (0 == this.t)return 0
        }
        return (this[1] & (1 << 32 - this.DB) - 1) << this.DB | this[0]
    };
    e.prototype.byteValue = function () {
        return 0 == this.t ? this.s : this[0] << 24 >> 24
    };
    e.prototype.shortValue = function () {
        return 0 == this.t ? this.s : this[0] <<
        16 >> 16
    };
    e.prototype.signum = function () {
        return 0 > this.s ? -1 : 0 >= this.t || 1 == this.t && 0 >= this[0] ? 0 : 1
    };
    e.prototype.toByteArray = function () {
        var a = this.t, b = [];
        b[0] = this.s;
        var c = this.DB - a * this.DB % 8, d, f = 0;
        if (0 < a--) {
            if (c < this.DB && (d = this[a] >> c) != (this.s & this.DM) >> c)b[f++] = d | this.s << this.DB - c;
            for (; 0 <= a;)if (8 > c ? (d = (this[a] & (1 << c) - 1) << 8 - c, d |= this[--a] >> (c += this.DB - 8)) : (d = this[a] >> (c -= 8) & 255, 0 >= c && (c += this.DB, --a)), 0 != (d & 128) && (d |= -256), 0 == f && (this.s & 128) != (d & 128) && ++f, 0 < f || d != this.s)b[f++] = d
        }
        return b
    };
    e.prototype.equals =
        function (a) {
            return 0 == this.compareTo(a)
        };
    e.prototype.min = function (a) {
        return 0 > this.compareTo(a) ? this : a
    };
    e.prototype.max = function (a) {
        return 0 < this.compareTo(a) ? this : a
    };
    e.prototype.and = function (a) {
        var b = l();
        this.bitwiseTo(a, X, b);
        return b
    };
    e.prototype.or = function (a) {
        var b = l();
        this.bitwiseTo(a, I, b);
        return b
    };
    e.prototype.xor = function (a) {
        var b = l();
        this.bitwiseTo(a, O, b);
        return b
    };
    e.prototype.andNot = function (a) {
        var b = l();
        this.bitwiseTo(a, P, b);
        return b
    };
    e.prototype.not = function () {
        for (var a = l(), b = 0; b < this.t; ++b)a[b] =
            this.DM & ~this[b];
        a.t = this.t;
        a.s = ~this.s;
        return a
    };
    e.prototype.shiftLeft = function (a) {
        var b = l();
        0 > a ? this.rShiftTo(-a, b) : this.lShiftTo(a, b);
        return b
    };
    e.prototype.shiftRight = function (a) {
        var b = l();
        0 > a ? this.lShiftTo(-a, b) : this.rShiftTo(a, b);
        return b
    };
    e.prototype.getLowestSetBit = function () {
        for (var a = 0; a < this.t; ++a)if (0 != this[a]) {
            var b = a * this.DB;
            a = this[a];
            if (0 == a)a = -1; else {
                var c = 0;
                0 == (a & 65535) && (a >>= 16, c += 16);
                0 == (a & 255) && (a >>= 8, c += 8);
                0 == (a & 15) && (a >>= 4, c += 4);
                0 == (a & 3) && (a >>= 2, c += 2);
                0 == (a & 1) && ++c;
                a = c
            }
            return b +
                a
        }
        return 0 > this.s ? this.t * this.DB : -1
    };
    e.prototype.bitCount = function () {
        for (var a = 0, b = this.s & this.DM, c = 0; c < this.t; ++c) {
            for (var d = this[c] ^ b, f = 0; 0 != d;)d &= d - 1, ++f;
            a += f
        }
        return a
    };
    e.prototype.testBit = function (a) {
        var b = Math.floor(a / this.DB);
        return b >= this.t ? 0 != this.s : 0 != (this[b] & 1 << a % this.DB)
    };
    e.prototype.setBit = function (a) {
        return this.changeBit(a, I)
    };
    e.prototype.clearBit = function (a) {
        return this.changeBit(a, P)
    };
    e.prototype.flipBit = function (a) {
        return this.changeBit(a, O)
    };
    e.prototype.add = function (a) {
        var b = l();
        this.addTo(a, b);
        return b
    };
    e.prototype.subtract = function (a) {
        var b = l();
        this.subTo(a, b);
        return b
    };
    e.prototype.multiply = function (a) {
        var b = l();
        this.multiplyTo(a, b);
        return b
    };
    e.prototype.divide = function (a) {
        var b = l();
        this.divRemTo(a, b, null);
        return b
    };
    e.prototype.remainder = function (a) {
        var b = l();
        this.divRemTo(a, null, b);
        return b
    };
    e.prototype.divideAndRemainder = function (a) {
        var b = l(), c = l();
        this.divRemTo(a, b, c);
        return [b, c]
    };
    e.prototype.modPow = function (a, b) {
        var c = a.bitLength(), d, f = w(1), e;
        if (0 >= c)return f;
        d = 18 >
        c ? 1 : 48 > c ? 3 : 144 > c ? 4 : 768 > c ? 5 : 6;
        e = 8 > c ? new y(b) : b.isEven() ? new B(b) : new z(b);
        var g = [], h = 3, k = d - 1, p = (1 << d) - 1;
        g[1] = e.convert(this);
        if (1 < d) {
            c = l();
            for (e.sqrTo(g[1], c); h <= p;)g[h] = l(), e.mulTo(c, g[h - 2], g[h]), h += 2
        }
        for (var m = a.t - 1, n, q = !0, r = l(), c = G(a[m]) - 1; 0 <= m;) {
            c >= k ? n = a[m] >> c - k & p : (n = (a[m] & (1 << c + 1) - 1) << k - c, 0 < m && (n |= a[m - 1] >> this.DB + c - k));
            for (h = d; 0 == (n & 1);)n >>= 1, --h;
            if (0 > (c -= h))c += this.DB, --m;
            if (q)g[n].copyTo(f), q = !1; else {
                for (; 1 < h;)e.sqrTo(f, r), e.sqrTo(r, f), h -= 2;
                0 < h ? e.sqrTo(f, r) : (h = f, f = r, r = h);
                e.mulTo(r, g[n], f)
            }
            for (; 0 <=
                   m && 0 == (a[m] & 1 << c);)e.sqrTo(f, r), h = f, f = r, r = h, 0 > --c && (c = this.DB - 1, --m)
        }
        return e.revert(f)
    };
    e.prototype.modInverse = function (a) {
        var b = a.isEven();
        if (this.isEven() && b || 0 == a.signum())return e.ZERO;
        for (var c = a.clone(), d = this.clone(), f = w(1), j = w(0), g = w(0), h = w(1); 0 != c.signum();) {
            for (; c.isEven();) {
                c.rShiftTo(1, c);
                if (b) {
                    if (!f.isEven() || !j.isEven())f.addTo(this, f), j.subTo(a, j);
                    f.rShiftTo(1, f)
                } else j.isEven() || j.subTo(a, j);
                j.rShiftTo(1, j)
            }
            for (; d.isEven();) {
                d.rShiftTo(1, d);
                if (b) {
                    if (!g.isEven() || !h.isEven())g.addTo(this,
                        g), h.subTo(a, h);
                    g.rShiftTo(1, g)
                } else h.isEven() || h.subTo(a, h);
                h.rShiftTo(1, h)
            }
            0 <= c.compareTo(d) ? (c.subTo(d, c), b && f.subTo(g, f), j.subTo(h, j)) : (d.subTo(c, d), b && g.subTo(f, g), h.subTo(j, h))
        }
        if (0 != d.compareTo(e.ONE))return e.ZERO;
        if (0 <= h.compareTo(a))return h.subtract(a);
        if (0 > h.signum())h.addTo(a, h); else return h;
        return 0 > h.signum() ? h.add(a) : h
    };
    e.prototype.pow = function (a) {
        return this.exp(a, new E)
    };
    e.prototype.gcd = function (a) {
        var b = 0 > this.s ? this.negate() : this.clone();
        a = 0 > a.s ? a.negate() : a.clone();
        if (0 > b.compareTo(a)) {
            var c =
                b, b = a;
            a = c
        }
        var c = b.getLowestSetBit(), d = a.getLowestSetBit();
        if (0 > d)return b;
        c < d && (d = c);
        0 < d && (b.rShiftTo(d, b), a.rShiftTo(d, a));
        for (; 0 < b.signum();)0 < (c = b.getLowestSetBit()) && b.rShiftTo(c, b), 0 < (c = a.getLowestSetBit()) && a.rShiftTo(c, a), 0 <= b.compareTo(a) ? (b.subTo(a, b), b.rShiftTo(1, b)) : (a.subTo(b, a), a.rShiftTo(1, a));
        0 < d && a.lShiftTo(d, a);
        return a
    };
    e.prototype.isProbablePrime = function (a) {
        var b, c = this.abs();
        if (1 == c.t && c[0] <= q[q.length - 1]) {
            for (b = 0; b < q.length; ++b)if (c[0] == q[b])return !0;
            return !1
        }
        if (c.isEven())return !1;
        for (b = 1; b < q.length;) {
            for (var d = q[b], e = b + 1; e < q.length && d < Z;)d *= q[e++];
            for (d = c.modInt(d); b < e;)if (0 == d % q[b++])return !1
        }
        return c.millerRabin(a)
    };
    e.prototype.square = function () {
        var a = l();
        this.squareTo(a);
        return a
    };
    J.prototype.init = function (a) {
        var b, c, d;
        for (b = 0; 256 > b; ++b)this.S[b] = b;
        for (b = c = 0; 256 > b; ++b)c = c + this.S[b] + a[b % a.length] & 255, d = this.S[b], this.S[b] = this.S[c], this.S[c] = d;
        this.j = this.i = 0
    };
    J.prototype.next = function () {
        var a;
        this.i = this.i + 1 & 255;
        this.j = this.j + this.S[this.i] & 255;
        a = this.S[this.i];
        this.S[this.i] =
            this.S[this.j];
        this.S[this.j] = a;
        return this.S[a + this.S[this.i] & 255]
    };
    var K = 256, H, s, m;
    if (null == s) {
        s = [];
        m = 0;
        if ("Netscape" == navigator.appName && "5" > navigator.appVersion && window.crypto) {
            n = window.crypto.random(32);
            for (k = 0; k < n.length; ++k)s[m++] = n.charCodeAt(k) & 255
        }
        for (; m < K;)k = Math.floor(65536 * Math.random()), s[m++] = k >>> 8, s[m++] = k & 255;
        m = 0;
        R((new Date).getTime())
    }
    L.prototype.nextBytes = function (a) {
        var b;
        for (b = 0; b < a.length; ++b) {
            var c = a, d = b, e;
            if (null == H) {
                R((new Date).getTime());
                H = new J;
                H.init(s);
                for (m = 0; m < s.length; ++m)s[m] =
                    0;
                m = 0
            }
            e = H.next();
            c[d] = e
        }
    };
    p.prototype.doPublic = function (a) {
        return a.modPowInt(this.e, this.n)
    };
    p.prototype.setPublic = function (a, b) {
        null != a && null != b && 0 < a.length && 0 < b.length ? (this.n = t(a, 16), this.e = parseInt(b, 16)) : alert("Invalid RSA public key")
    };
    p.prototype.encrypt = function (a) {
        var b;
        b = this.n.bitLength() + 7 >> 3;
        if (b < a.length + 11)alert("Message too long for RSA"), b = null; else {
            for (var c = [], d = a.length - 1; 0 <= d && 0 < b;) {
                var f = a.charCodeAt(d--);
                128 > f ? c[--b] = f : 127 < f && 2048 > f ? (c[--b] = f & 63 | 128, c[--b] = f >> 6 | 192) : (c[--b] =
                    f & 63 | 128, c[--b] = f >> 6 & 63 | 128, c[--b] = f >> 12 | 224)
            }
            c[--b] = 0;
            a = new L;
            for (d = []; 2 < b;) {
                for (d[0] = 0; 0 == d[0];)a.nextBytes(d);
                c[--b] = d[0]
            }
            c[--b] = 2;
            c[--b] = 0;
            b = new e(c)
        }
        if (null == b)return null;
        b = this.doPublic(b);
        if (null == b)return null;
        b = b.toString(16);
        return 0 == (b.length & 1) ? b : "0" + b
    };
    p.prototype.doPrivate = function (a) {
        if (null == this.p || null == this.q)return a.modPow(this.d, this.n);
        var b = a.mod(this.p).modPow(this.dmp1, this.p);
        for (a = a.mod(this.q).modPow(this.dmq1, this.q); 0 > b.compareTo(a);)b = b.add(this.p);
        return b.subtract(a).multiply(this.coeff).mod(this.p).multiply(this.q).add(a)
    };
    p.prototype.setPrivate = function (a, b, c) {
        null != a && null != b && 0 < a.length && 0 < b.length ? (this.n = t(a, 16), this.e = parseInt(b, 16), this.d = t(c, 16)) : alert("Invalid RSA private key")
    };
    p.prototype.setPrivateEx = function (a, b, c, d, e, j, g, h) {
        null != a && null != b && 0 < a.length && 0 < b.length ? (this.n = t(a, 16), this.e = parseInt(b, 16), this.d = t(c, 16), this.p = t(d, 16), this.q = t(e, 16), this.dmp1 = t(j, 16), this.dmq1 = t(g, 16), this.coeff = t(h, 16)) : alert("Invalid RSA private key")
    };
    p.prototype.generate = function (a, b) {
        var c = new L, d = a >> 1;
        this.e = parseInt(b,
            16);
        for (var f = new e(b, 16); ;) {
            for (; !(this.p = new e(a - d, 1, c), 0 == this.p.subtract(e.ONE).gcd(f).compareTo(e.ONE) && this.p.isProbablePrime(10)););
            for (; !(this.q = new e(d, 1, c), 0 == this.q.subtract(e.ONE).gcd(f).compareTo(e.ONE) && this.q.isProbablePrime(10)););
            if (0 >= this.p.compareTo(this.q)) {
                var j = this.p;
                this.p = this.q;
                this.q = j
            }
            var j = this.p.subtract(e.ONE), g = this.q.subtract(e.ONE), h = j.multiply(g);
            if (0 == h.gcd(f).compareTo(e.ONE)) {
                this.n = this.p.multiply(this.q);
                this.d = f.modInverse(h);
                this.dmp1 = this.d.mod(j);
                this.dmq1 =
                    this.d.mod(g);
                this.coeff = this.q.modInverse(this.p);
                break
            }
        }
    };
    p.prototype.decrypt = function (a) {
        a = t(a, 16);
        a = this.doPrivate(a);
        if (null == a)return null;
        a:{
            var b = this.n.bitLength() + 7 >> 3;
            a = a.toByteArray();
            for (var c = 0; c < a.length && 0 == a[c];)++c;
            if (a.length - c != b - 1 || 2 != a[c])a = null; else {
                for (++c; 0 != a[c];)if (++c >= a.length) {
                    a = null;
                    break a
                }
                for (b = ""; ++c < a.length;) {
                    var d = a[c] & 255;
                    128 > d ? b += String.fromCharCode(d) : 191 < d && 224 > d ? (b += String.fromCharCode((d & 31) << 6 | a[c + 1] & 63), ++c) : (b += String.fromCharCode((d & 15) << 12 | (a[c + 1] & 63) <<
                        6 | a[c + 2] & 63), c += 2)
                }
                a = b
            }
        }
        return a
    };
    var C = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", S = "=";
    p.prototype.parseKey = function (a) {
        a = this.prepareKey(a);
        var b = this.structure(), c = 0, d = null, e = null, j = 0, g;
        for (g in b)d = b[g], d.hasOwnProperty("offset") && (c += 2 * d.offset), j = "string" == typeof d.length ? this[d.length] : d.length, j *= 2, e = a.substr(c, j), d.hasOwnProperty("type") && ("int" == d.type ? e = parseInt(e, 16) : "bigint" == d.type && (e = t(e, 16))), c += j, this[g] = e
    };
    p.prototype.char64ToHex = function (a) {
        var b = "";
        a =
            atob(a);
        for (var c = 0; c < a.length; ++c) {
            var d = a.charCodeAt(c).toString(16);
            1 === d.length && (d = "0" + d);
            b += d
        }
        return b
    };
    p.prototype.prepareKey = function (a) {
        a = a.replace(/^\s+|\s+$/g, "");
        a = a.split(/\r?\n/);
        "-----BEGIN" == a[0].substring(0, 10) && (a = a.slice(1, a.length - 1));
        a = a.join("");
        return this.char64ToHex(a)
    };
    p.prototype.getBaseKey = function () {
        var a = "", b = this.structure(), c = null, d = null, e = 0, j;
        for (j in b)c = b[j], c.variable && (d = this[j].toString(16), d.length % 2 && (d = "0" + d), c.hasOwnProperty("padded") && c.padded && (d = "00" + d),
            e = d.length / 2, e = e.toString(16), e.length % 2 && (e = "0" + e), c.hasOwnProperty("extraspace") && (a += e), a += e, a += d, a += "02");
        return a.slice(0, -2)
    };
    p.prototype.wordwrap = function (a, b) {
        b = b || 64;
        return !a ? a : a.match(RegExp("(.{1," + b + "})( +|$\n?)|(.{1," + b + "})", "g")).join("\n")
    };
    p.prototype.getPrivateKey = function () {
        var a = "-----BEGIN RSA PRIVATE KEY-----\n", b;
        b = "3082025e02010002" + this.getBaseKey();
        a += this.wordwrap(M(b)) + "\n";
        return a + "-----END RSA PRIVATE KEY-----"
    };
    p.prototype.getPublicKey = function () {
        var a = "-----BEGIN PUBLIC KEY-----\n",
            b;
        b = "30819f300d06092a864886f70d010101050003818d0030818902" + this.getBaseKey();
        a += this.wordwrap(M(b)) + "\n";
        return a + "-----END PUBLIC KEY-----"
    };
    var D = function (a) {
        p.call(this);
        a && this.parseKey(a)
    };
    D.prototype = new p;
    D.prototype.constructor = D;
    D.prototype.structure = function () {
        return {
            header: {length: 4},
            versionlength: {length: 1, offset: 1, type: "int"},
            version: {length: "versionlength", type: "int"},
            n_length: {length: 1, offset: 2, type: "int"},
            n: {length: "n_length", type: "bigint", variable: !0, padded: !0, extraspace: !0},
            e_length: {
                length: 1,
                offset: 1, type: "int"
            },
            e: {length: "e_length", type: "int", variable: !0},
            d_length: {length: 1, offset: 2, type: "int"},
            d: {length: "d_length", type: "bigint", variable: !0, padded: !0, extraspace: !0},
            p_length: {length: 1, offset: 1, type: "int"},
            p: {length: "p_length", type: "bigint", variable: !0, padded: !0},
            q_length: {length: 1, offset: 1, type: "int"},
            q: {length: "q_length", type: "bigint", variable: !0, padded: !0},
            dmp1_length: {length: 1, offset: 1, type: "int"},
            dmp1: {length: "dmp1_length", type: "bigint", variable: !0},
            dmq1_length: {
                length: 1, offset: 1,
                type: "int"
            },
            dmq1: {length: "dmq1_length", type: "bigint", variable: !0, padded: !0},
            coeff_length: {length: 1, offset: 1, type: "int"},
            coeff: {length: "coeff_length", type: "bigint", variable: !0, padded: !0}
        }
    };
    var x = function (a) {
        p.call(this);
        a && ("string" == typeof a ? this.parseKey(a) : a.hasOwnProperty("n") && a.hasOwnProperty("e") && (this.n = a.n, this.e = a.e))
    };
    x.prototype = new p;
    x.prototype.constructor = x;
    x.prototype.structure = function () {
        return {
            header: {length: 25}, n_length: {length: 1, offset: 2, type: "int"}, n: {
                length: "n_length", type: "bigint",
                variable: !0, padded: !0, extraspace: !0
            }, e_length: {length: 1, offset: 1, type: "int"}, e: {length: "e_length", type: "int", variable: !0}
        }
    };
    k = function () {
        this.pubkey = this.privkey = null
    };
    k.prototype.setPrivateKey = function (a) {
        this.privkey = new D(a);
        this.pubkey = new x(this.privkey)
    };
    k.prototype.setPublicKey = function (a) {
        this.pubkey = new x(a)
    };
    k.prototype.decrypt = function (a) {
        return this.privkey ? this.privkey.decrypt(Y(a)) : !1
    };
    k.prototype.encrypt = function (a) {
        var b = this.pubkey || this.privkey;
        return b ? M(b.encrypt(a)) : !1
    };
    k.prototype.getPrivateKey =
        function () {
            this.privkey || (this.privkey = new D, this.privkey.generate(1024, "010001"), this.pubkey = new x(this.privkey));
            return this.privkey.getPrivateKey()
        };
    k.prototype.getPublicKey = function () {
        this.pubkey || (this.pubkey = new x, this.pubkey.generate(1024, "010001"));
        return this.pubkey.getPublicKey()
    };
    T.JSEncrypt = k
})(JSEncryptExports);
var JSEncrypt = JSEncryptExports.JSEncrypt;
